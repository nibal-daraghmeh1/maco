import*as e from"./state.js";import{hideLoader as t}from"./ui.js";import{getTrainData as n,getWorstCaseProductType as o,getRpnRatingClass as a,getTrainsGroupedByLine as i,getLargestEssaForLineAndDosageForm as r,getToxicityPreference as s}from"./utils.js";export function renderMacoForTrains(s=null){const l=document.getElementById("trainsContainer"),d=document.getElementById("noTrainsMessage");l.innerHTML="";const m=n();let p=i();if(s&&(p=p.filter(e=>e.line===s)),!p||0===p.length)return d.style.display="block",void(l.style.display="none");d.style.display="none",l.style.display="block";const u={};m.forEach(e=>{e.key&&(u[e.key]=e)});const g=[];p.forEach(e=>{e.trains.forEach(e=>{const t=u[e.key];if(!t||!t.id)return;const n={...e,...t};g.push(n)})});let x=g;if(window.printSelectedTrain&&"all"!==window.printSelectedTrain&&(x=Array.isArray(window.printSelectedTrain)?g.filter(e=>window.printSelectedTrain.includes(String(e.id))||window.printSelectedTrain.includes(String(e.number))):g.filter(e=>String(e.id)===String(window.printSelectedTrain)||String(e.number)===String(window.printSelectedTrain))),0===x.length)return d.style.display="block",void(l.style.display="none");const b={};x.forEach(e=>{b[e.line]||(b[e.line]=[]),b[e.line].push(e)}),Object.keys(b).forEach(t=>{const n=document.createElement("div");n.className="mb-6",n.innerHTML=`<h3 class="text-lg font-bold mb-2">${t} - MACO</h3>`,l.appendChild(n);const i={};b[t].forEach(e=>{i[e.dosageForm]||(i[e.dosageForm]=[]),i[e.dosageForm].push(e)}),Object.keys(i).forEach(t=>{const n=document.createElement("div");n.className="pl-4 mb-3",n.innerHTML=`<h4 class="text-md font-semibold">${t}</h4>`,l.appendChild(n),i[t].forEach(t=>{const n=t.products.map(e=>e.productType),i=o(n),s=e.safetyFactorConfig[i]||e.safetyFactorConfig.Other,c=document.createElement("div");c.className="train-card",c.id=`product-maco-train-${t.id}`;const d=t.machineIds.map(t=>{const n=e.machines.find(e=>e.id===t),o=n?n.name:`Unknown (ID: ${t})`;return`<span class="individual-machine" title="Machine: ${o} - Area: ${(n?n.area:0).toLocaleString()} cm²">${o}</span>`}).join(" → ");const p=t.products.map(e=>{const n=e.activeIngredients.length>0?Math.min(...e.activeIngredients.map(t=>1e3*e.batchSizeKg/(t.mdd/1e3))):1/0,o=e.id===t.minMbsProductId,a=e.id===t.minRatioProductId;return`\n                            <tr class="product-main-row">\n                                <td class="px-4 py-3 whitespace-nowrap">${e.productCode}</td>\n                                <td class="px-4 py-3 font-medium">${e.name}<p class="text-xs italic" style="color:var(--text-secondary);">${e.productType}</p></td>\n                                <td class="px-4 py-3 whitespace-nowrap ${o?"font-bold":""}" style="${o?"color: var(--gradient-start);":""}">${e.batchSizeKg} ${o?'<span class="text-xs ml-1" title="Minimum Batch Size in Train">★</span>':""}</td>\n                                <td class="px-4 py-3 whitespace-nowrap ${a?"font-bold":""}" style="${a?"color: var(--gradient-end);":""}">${isFinite(n)?n.toLocaleString(void 0,{maximumFractionDigits:2}):"N/A"} ${a?'<span class="text-xs ml-1" title="Minimum BS/MDD Ratio in Train">★</span>':""}</td>\n                            </tr>\n                            <tr class="ingredients-sub-row">\n                                <td colspan="4" class="!pb-0">\n                                    <div class="p-3 ingredients-sub-table">\n                                         <ul class="text-xs list-disc list-inside">\n                                         ${e.activeIngredients.map(e=>`<li><b>${e.name}</b> (TD: ${e.therapeuticDose}mg, MDD: ${e.mdd/1e3}g)</li>`).join("")}\n                                         </ul>\n                                    </div>\n                                </td>\n                            </tr>`}).join(""),u=t.worstProductRpn?`<p><b class="text-sm" >${t.worstProductRpn.productName}</b> (Ingredient: ${t.worstProductRpn.ingredientName})</p>\n                         <p class="mt-0.4">RPN: <span class="font-bold text-sm" style="color:var(--gradient-mid);">${t.worstProductRpn.rpn}</span> <span class="rpn-rating-badge ${a(t.worstProductRpn.rating)}">${t.worstProductRpn.rating}</span></p>`:'<p style="color:var(--text-secondary);">N/A</p>',g=e.products.find(e=>e.id===t.lowestLtdProductId)||{name:"N/A"},x=e.products.find(e=>e.id===t.minRatioProductId)||{name:"N/A"},b=e.products.find(e=>e.id===t.minMbsProductId)||{name:"N/A"};c.innerHTML=`\n                            <div class="train-header" onclick="toggleTrain('pm-${t.id}')">\n                                <span>Train ${t.number} - Product MACO Calculation</span>\n                                <button class="train-toggle" id="toggle-pm-${t.id}">▶</button>\n                            </div>\n                            <div class="train-content collapsed" id="content-pm-${t.id}">\n                                <div class="train-content-inner space-y-6">\n                                    \x3c!-- Train Details --\x3e\n                                    <div>\n                                        <div class="flex justify-between items-start gap-4">\n                                            <div>\n                                                <h3 class="text-lg font-bold">Train ${t.number} Details</h3>\n                                                <div class="flex items-center gap-x-2 mt-1" id="train-badges-${t.id}"></div>\n                                            </div>\n                                            <div class="text-right flex-shrink-0">\n                                                <p class="text-sm uppercase font-semibold" style="color: var(--text-secondary);">Train Area (ESSA)</p>\n                                                <p class="text-lg font-bold" style="color: var(--gradient-mid);">${t.essa.toLocaleString()} cm²</p>\n                                            </div>\n                                        </div>\n                                        <div class="mt-4 p-3 rounded-md" style="background-color:var(--bg-accent);">\n                                            <p class="text-xs uppercase font-semibold mb-1" style="color: var(--text-secondary);">Machines in Train</p>\n                                            <p class="text-sm">${d}</p>\n                                        </div>\n                                    </div>\n\n                                    \x3c!-- Products Table --\x3e\n                                    <div class="space-y-2">\n                                        <h4 class="text-lg font-semibold">Products in Train</h4>\n                                        <div class="overflow-hidden rounded-md border" style="border-color: var(--border-color);">\n                                            <table class="w-full text-sm">\n                                                <thead class="border-b" style="border-color: var(--border-color);">\n                                                    <tr>\n                                                        <th class="px-4 py-3 text-left text-sm font-semibold uppercase tracking-wider">Code</th>\n                                                        <th class="px-4 py-3 text-left text-sm font-semibold uppercase tracking-wider">Product Name</th>\n                                                        <th class="px-4 py-3 text-left text-sm font-semibold uppercase tracking-wider">Batch Size (Kg)</th>\n                                                        <th class="px-4 py-3 text-left text-sm font-semibold uppercase tracking-wider">BS/MDD Ratio</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody class="divide-y" style="border-color: var(--border-color);">${p}</tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n\n                                    \x3c!-- Analysis & Calculations Grid --\x3e\n                                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 pt-4 border-t" style="border-color: var(--border-color);">\n                                        \x3c!-- Left Column: RPN & MACO Limits --\x3e\n                                        <div class="space-y-6">\n                                            <div class="p-4 rounded-lg" style="background-color:var(--bg-accent);">\n                                                <div class="flex items-center gap-2 mb-2">\n                                                           <div class="relative group">\n                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16" style="color: var(--text-secondary);" title="Information">\n                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>\n                                                            <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>\n                                                        </svg>\n                                            \n                                                    </div>\n                                                    <h5 class="text-sm font-semibold">Worst-Case Product for Cleaning Study (by RPN)</h5>\n\n                                                </div>\n                                                ${u}\n                                            </div>\n                                          \n                                        </div>\n\n                                        \x3c!-- Right Column: MACO Calculation Details --\x3e\n                                        <div class="space-y-4">\n\n                                             <h4 class="text-md font-semibold">MACO Calculation Breakdown</h4>\n                                             <button id="breakdown-toggle-btn-${t.id}" onclick="toggleMacoBreakdown(${t.id})" class="w-full text-sm py-2 px-4 rounded-md border" style="color: var(--gradient-mid); border-color: var(--gradient-mid);">Show MACO Calculation Breakdown</button>\n                                             \n                                             <div id="maco-breakdown-details-${t.id}" class="hidden space-y-4">\n                                                 <div class="p-4 rounded-lg" style="background-color: var(--bg-accent);">\n                                                    <p class="text-sm"><b>Worst-Case Dosage Form:</b> ${i}</p>\n                                                    <p class="text-xs mt-1" style="color:var(--text-secondary);">Range for ${s.route} route: ${s.min.toLocaleString()} - ${s.max.toLocaleString()}</p>\n                                                    <label for="product-sf-input-train-${t.id}" class="block text-sm font-small mt-2 mb-1">Safety Factor (SF)</label>\n                                                    <input type="number" id="product-sf-input-train-${t.id}" class="w-full px-2 py-2 border rounded-lg" value="${s.max}" min="${s.min}" max="${s.max}" oninput="recalculateProductMacoForTrain(${t.id})" onchange="clampSafetyFactor(this, ${t.id})">\n                                                 </div>\n                                                 <ul class="text-sm space-y-1 p-3 border-l-4 rounded-r-md" style="border-color:var(--gradient-mid); background-color:var(--bg-accent);">\n                                                    <li><b>Minimum Batch Size (MBS):</b> ${t.minMbsKg} kg <span class="text-xs" style="color:var(--text-secondary);">(from ${b.name})</span></li>\n                                                    <li><b>Lowest LTD:</b> ${t.lowestLtd} mg <span class="text-xs" style="color:var(--text-secondary);">(from ${g.name})</span></li>\n                                                    <li><b>Minimum BS(g)/MDD(g) Ratio:</b> ${t.minBsMddRatio.toLocaleString(void 0,{maximumFractionDigits:2})} <span class="text-xs" style="color:var(--text-secondary);">(from ${x.name})</span></li>\n                                                    <li><b>Lowest PDE:</b> ${null!==t.lowestPde?t.lowestPde+" mg":"N/A"}</li>\n                                                    <li><b>Lowest LD50:</b> ${null!==t.lowestLd50?t.lowestLd50+" mg/kg":"N/A"}</li>\n                                                    ${null!==t.lowestLd50?`<li><b>NOEL Calculation:</b> (${t.lowestLd50} × 70) ÷ 2000 = <span class="font-semibold">${(70*t.lowestLd50/2e3).toFixed(6)} g</span></li>`:""}\n                                                    <li><b>Line Largest ESSA:</b> ${r(t,m).toLocaleString()} cm² (same line & dosage form)</li>\n                                                 </ul>\n                                                 <div id="maco-breakdown-container-${t.id}" class="divide-y rounded-md border" style="border-color: var(--border-color);"></div>\n                                            </div>\n                                            \n                                            \x3c!-- Always visible MACO / Swab value - always at the bottom --\x3e\n                                            <div class="p-4 rounded-lg border mt-4" style="border-color:var(--gradient-mid);">\n                                                <div class="text-center">\n                                                    <p class="text-sm" style="color:var(--text-secondary);">MACO / Swab (assuming ${t.assumedSsa} cm² area)</p>\n                                                    <p class="text-lg font-bold" id="maco-per-swab-main-${t.id}" style="color:var(--gradient-mid);">...</p>\n                                                </div>\n                                            </div>\n                                            </div>\n                                    </div>\n                                </div>\n                            </div>\n                        `,l.appendChild(c),recalculateProductMacoForTrain(t.id)})})});const h=x.map(e=>{const t=document.getElementById(`final-maco-val-${e.id}`);return t&&t.dataset.value?{...e,finalMaco:parseFloat(t.dataset.value)}:{...e,finalMaco:0}});if(h.length>0){const e=h.reduce((e,t)=>t.finalMaco<e.finalMaco?t:e),t=document.getElementById(`train-badges-${e.id}`);t&&(t.innerHTML+='<span class="text-xs font-semibold px-2 py-1 rounded-full bg-red-100 text-red-800 dark:bg-red-900/50 dark:text-red-300 ml-2">Lowest MACO</span>')}c(),t()}export function recalculateProductMacoForTrain(e,t){const o=n().find(t=>t.id===e);if(!o)return;const a=i();let c=e;for(const t of a){const n=t.trains.find(t=>t.id===e);if(n&&n.number){c=n.number;break}}if(void 0===t){const e=n();t=r(o,e)}const l=document.getElementById(`product-sf-input-train-${o.id}`),d=parseFloat(l.value);if(isNaN(d))return;const m=o.lowestLtd*o.minBsMddRatio/d,p=10*o.minMbsKg;let u=1/0,g=1/0;s();const x="true"===localStorage.getItem("productRegister-pdeHidden"),b="true"===localStorage.getItem("productRegister-ld50Hidden");if(null===o.lowestPde||x||(u=o.lowestPde*o.minBsMddRatio),null!==o.lowestLd50&&!b){const e=70*o.lowestLd50/2e3,t=o.products.flatMap(e=>e.activeIngredients.map(e=>e.mdd/1e3)),n=Math.min(...t);g=e*o.minMbsKg*1e3/(d*n)}const h=.004*t,v=[{name:"0.1% Therapeutic Dose",value:m},{name:"10 ppm Criterion",value:p}];null===o.lowestPde||x||v.push({name:"Health-Based Limit (PDE)",value:u}),null===o.lowestLd50||b||v.push({name:"Health-Based Limit (NOEL)",value:g}),v.push({name:"Visual Clean Limit",value:h});const y=v.reduce((e,t)=>t.value<e.value?t:e),f=y.value,w=t>0?f/t:0,$=w*o.assumedSsa,M=document.getElementById(`maco-per-swab-main-${o.id}`);M&&(M.textContent=`${$.toLocaleString(void 0,{minimumFractionDigits:4,maximumFractionDigits:4})} mg/Swab`);const S=document.getElementById(`maco-breakdown-container-${o.id}`);if(S&&(S.innerHTML=v.map(({value:e,name:t})=>{let n="";if("0.1% Therapeutic Dose"===t)n='MACO = (<span title="Lowest Therapeutic Dose (mg)">LTD</span> × <span title="Batch Size / Maximum Daily Dose Ratio">BS/MDD Ratio</span>) / <span title="Safety Factor">SF</span>';else if("10 ppm Criterion"===t)n='MACO = 10 × <span title="Minimum Batch Size (kg)">MBS(kg)</span>';else if("Health-Based Limit (PDE)"===t)n='MACO = <span title="Permitted Daily Exposure (mg)">PDE</span> × <span title="Batch Size / Maximum Daily Dose Ratio">BS/MDD Ratio</span>';else if("Health-Based Limit (NOEL)"===t){const e=70*o.lowestLd50/2e3,t=o.products.flatMap(e=>e.activeIngredients.map(e=>e.mdd/1e3)),a=Math.min(...t);n=`NOEL = (LD50 × 70 kg) ÷ 2000 = (${o.lowestLd50} × 70) ÷ 2000 = ${e.toFixed(6)} g<br>\n                           MACO = (NOEL × MBS(kg) × 1000) ÷ (SF × MDD(g)) = (${e.toFixed(6)} × ${o.minMbsKg} × 1000) ÷ (${d} × ${a})`}else"Visual Clean Limit"===t&&(n='MACO = 0.004 × <span title="Equipment Surface Shared Area (cm²)">Largest ESSA</span>');return`\n                    <div class="p-3 ${y.value===e?"font-bold":""}" style="${y.value===e?"background-color: #dcfce7; color: #166534;":""}">\n                        <div class="flex justify-between items-start mb-1">\n                            <span class="text-sm font-medium">${t}</span>\n                            <span class="text-sm text-right">${isFinite(e)?e.toLocaleString(void 0,{maximumFractionDigits:2})+" mg":"N/A"} ${y.value===e?'<span class="text-xs ml-2">✓</span>':""}</span>\n                        </div>\n                        <div class="text-xs font-mono bg-gray-100 dark:bg-gray-700 p-2 rounded mt-1" style="color: var(--text-secondary);">\n                            ${n}\n                        </div>\n                    </div>\n                `}).join("")),S){const e=v.find(e=>"10 ppm Criterion"===e.name),t=e?e.value:0,n=document.createElement("div");n.className="p-3 border-t-2 border-dashed mt-4",n.style.borderColor="var(--gradient-mid)",n.innerHTML=`\n            <div class="text-center">\n                <p class="text-sm font-semibold mb-2" style="color:var(--text-secondary);">Selected Limit: ${y.name}</p>\n                <p class="text-lg font-extrabold" style="color:var(--gradient-mid);" id="final-maco-val-${o.id}" data-value="${f}">${f.toLocaleString(void 0,{minimumFractionDigits:2,maximumFractionDigits:2})} mg</p>\n                ${"10 ppm Criterion"===y.name?`<p class="text-sm mt-1" style="color:var(--text-secondary);">10 ppm Criterion: ${t.toLocaleString(void 0,{minimumFractionDigits:2,maximumFractionDigits:2})} mg</p>`:""}\n            </div>\n        `,S.appendChild(n);const a=document.createElement("div");a.className="p-4 rounded-lg mt-4",a.style.backgroundColor="var(--bg-accent)",a.innerHTML=`\n            <h5 class="text-sm font-semibold mb-2">Final MACO Limits for Train ${c}</h5>\n            <div class="space-y-3">\n                <div><p class="text-sm" style="color:var(--text-secondary);">MACO / Area</p><p class="text-md font-bold" id="maco-per-area-val-${o.id}">${w.toExponential(3)} mg/cm²</p></div>\n            </div>\n        `,S.appendChild(a)}}window.toggleMacoBreakdown=function(e){const t=document.getElementById(`maco-breakdown-details-${e}`),n=document.getElementById(`breakdown-toggle-btn-${e}`);t.classList.contains("hidden")?(t.classList.remove("hidden"),n.textContent="Hide MACO Calculation Breakdown"):(t.classList.add("hidden"),n.textContent="Show MACO Calculation Breakdown")};export function toggleMacoExportDropdown(){const e=document.getElementById("macoExportDropdown");e.classList.toggle("hidden"),c(),document.addEventListener("click",function t(n){n.target.closest("#macoExportDropdown")||n.target.closest('button[onclick="toggleMacoExportDropdown()"]')||(e.classList.add("hidden"),document.removeEventListener("click",t))})}export function toggleMacoPrintDropdown(){const e=document.getElementById("macoPrintDropdown");e.classList.toggle("hidden"),c(),document.addEventListener("click",function t(n){n.target.closest("#macoPrintDropdown")||n.target.closest('button[onclick="toggleMacoPrintDropdown()"]')||(e.classList.add("hidden"),document.removeEventListener("click",t))})}function c(){import("./utils.js").then(e=>{const{getTrainData:t,getTrainIdToLineNumberMap:n}=e,o=t(),a=n(),i=document.getElementById("macoExportTrainOptions");i&&(i.innerHTML="",o.forEach(e=>{const t=document.createElement("label");t.className="flex items-center px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer",t.style.color="var(--text-primary)";const n=document.createElement("input");n.type="checkbox",n.className="mr-2 export-maco-train-checkbox",n.value=e.id,n.onchange=()=>updateAllMacoTrainsCheckbox("export");const o=document.createElement("span"),r=a.get(String(e.id));o.textContent=r?`${r.line} — Train ${r.number}`:`Train ${e.id}`,t.appendChild(n),t.appendChild(o),i.appendChild(t)}));const r=document.getElementById("macoPrintTrainOptions");r&&(r.innerHTML="",o.forEach(e=>{const t=document.createElement("label");t.className="flex items-center px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer",t.style.color="var(--text-primary)";const n=document.createElement("input");n.type="checkbox",n.className="mr-2 print-maco-train-checkbox",n.value=e.id,n.onchange=()=>updateAllMacoTrainsCheckbox("print");const o=document.createElement("span"),i=a.get(String(e.id));o.textContent=i?`${i.line} — Train ${i.number}`:`Train ${e.id}`,t.appendChild(n),t.appendChild(o),r.appendChild(t)}))})}export function toggleAllMacoTrainsSelection(e){const t=document.getElementById(`${e}MacoAllTrainsCheckbox`);document.querySelectorAll(`.${e}-maco-train-checkbox`).forEach(e=>{e.checked=t.checked})}export function updateAllMacoTrainsCheckbox(e){const t=document.getElementById(`${e}MacoAllTrainsCheckbox`),n=document.querySelectorAll(`.${e}-maco-train-checkbox`),o=document.querySelectorAll(`.${e}-maco-train-checkbox:checked`);0===o.length?(t.checked=!1,t.indeterminate=!1):o.length===n.length?(t.checked=!0,t.indeterminate=!1):(t.checked=!1,t.indeterminate=!0)}export function executeMacoExportSelection(){import("./ui.js").then(e=>{const t=document.getElementById("exportMacoAllTrainsCheckbox"),n=[];if(t.checked)e.exportProductMacoToExcel("all");else{if(document.querySelectorAll(".export-maco-train-checkbox:checked").forEach(e=>{n.push(e.value)}),0===n.length)return void e.showCustomAlert("No Selection","Please select at least one train to export.");e.exportProductMacoToExcel(n)}document.getElementById("macoExportDropdown").classList.add("hidden")}).catch(e=>{console.error("Error loading export function:",e),alert("Error loading export function")})}export function executeMacoPrintSelection(){import("./ui.js").then(e=>{const t=document.getElementById("printMacoAllTrainsCheckbox"),n=[];if(t.checked)e.printCurrentView("macoForTrains","all");else{if(document.querySelectorAll(".print-maco-train-checkbox:checked").forEach(e=>{n.push(e.value)}),0===n.length)return void e.showCustomAlert("No Selection","Please select at least one train to print.");e.printCurrentView("macoForTrains",n)}document.getElementById("macoPrintDropdown").classList.add("hidden")}).catch(e=>{console.error("Error loading print function:",e),alert("Error loading print function")})}window.toggleMacoExportDropdown=toggleMacoExportDropdown,window.toggleMacoPrintDropdown=toggleMacoPrintDropdown,window.toggleAllMacoTrainsSelection=toggleAllMacoTrainsSelection,window.updateAllMacoTrainsCheckbox=updateAllMacoTrainsCheckbox,window.executeMacoExportSelection=executeMacoExportSelection,window.executeMacoPrintSelection=executeMacoPrintSelection;