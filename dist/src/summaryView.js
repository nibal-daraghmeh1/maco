import*as e from"./state.js";import{getProductTrainId as t,calculateScores as n}from"./utils.js";export function renderSummaryReport(){const s=document.getElementById("topRpnTableBody"),d=document.getElementById("criticalProductsTableBody"),o=document.getElementById("topRpnTableContainer"),r=document.getElementById("criticalProductsTableContainer"),a=document.getElementById("noTopRpnMessage"),l=document.getElementById("noCriticalMessage");s.innerHTML="",d.innerHTML="";const p=e.products.flatMap(e=>{const s=t(e);return e.activeIngredients.map(t=>({productName:e.name,ingredientName:t.name,rpn:n(t).rpn,trainId:"N/A"!==s?`T${s}`:""}))}).sort((e,t)=>t.rpn-e.rpn).slice(0,10);p.length>0?(a.style.display="none",o.style.display="block",p.forEach((e,t)=>{s.insertRow().innerHTML=`<td class="px-4 py-3">${t+1}</td><td class="px-4 py-3">${e.productName}</td><td class="px-4 py-3">${e.trainId||"N/A"}</td><td class="px-4 py-3">${e.ingredientName}</td><td class="px-4 py-3 font-bold" style="color: var(--gradient-mid);">${e.rpn}</td>`})):(a.style.display="block",o.style.display="none");const i=e.products.filter(e=>e.isCritical);i.length>0?(l.style.display="none",r.style.display="block",i.forEach(e=>{d.insertRow().innerHTML=`<td class="px-4 py-3">${e.name}</td><td class="px-4 py-3" style="white-space: pre-wrap; word-break: break-word;">${e.criticalReason||"No reason provided"}</td>`})):(l.style.display="block",r.style.display="none")}