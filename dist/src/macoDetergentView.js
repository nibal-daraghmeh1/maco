import*as e from"./state.js";import{getTrainData as t,getWorstCaseProductType as n,getTrainsGroupedByLine as r,getLargestEssaForLineAndDosageForm as o}from"./utils.js";import*as i from"./utils.js";export function renderDetergentMaco(o=null){const a=document.getElementById("detergentMacoResults"),d=document.getElementById("noTrainsForDetergentMessage");a.innerHTML="";const c=t();let l=r();if(o&&(l=l.filter(e=>e.line===o)),!l||0===l.length)return void(d.style.display="block");d.style.display="none";const s={};c.forEach(e=>{e.key&&(s[e.key]=e)});const g=[];l.forEach(e=>{e.trains.forEach(e=>{const t=s[e.key];if(!t||!t.id)return;const n={...e,...t};g.push(n)})});let p=g;if(window.printSelectedTrain&&"all"!==window.printSelectedTrain&&(p=Array.isArray(window.printSelectedTrain)?g.filter(e=>window.printSelectedTrain.includes(String(e.id))):g.filter(e=>String(e.id)===String(window.printSelectedTrain))),0===p.length)return void(d.style.display="block");const m=i.getTrainIdToLineNumberMap();p.forEach((t,r)=>{const o=t.products.map(e=>e.productType),i=n(o),d=e.safetyFactorConfig[i]||e.safetyFactorConfig.Other,c=document.createElement("div");c.className="train-card";const l=m.get(String(t.id)),s=l?`${l.line} — Train ${l.number} - Detergent MACO Calculation`:`Train ${t.id} - Detergent MACO Calculation`;c.innerHTML=`\n                    <div class="train-header" onclick="toggleTrain('dm-${t.id}')">\n                        <span>${s}</span>\n                        <button class="train-toggle" id="toggle-dm-${t.id}">▶</button>\n                    </div>\n                    <div class="train-content collapsed" id="content-dm-${t.id}">\n                        <div class="train-content-inner space-y-3">\n                            <div class="p-3 rounded-md" style="background-color: var(--bg-accent);">\n                               \n                                <p class="text-xs mt-1" style="color:var(--text-secondary);">\n                                    Based on products in the train, the minimum (Batch Size / MDD) ratio is: <b>${t.minBsMddRatio.toLocaleString(void 0,{maximumFractionDigits:2})}</b>.\n                                </p>\n                                <p class="text-xs mt-1" style="color:var(--text-secondary);">\n                                    Min LD50 = <b><span id="min-ld50-train-${t.id}">...</span> mg/kg</b>\n                                </p>\n                            </div>\n\n                            <div class="p-3 rounded-md border" style="border-color:var(--border-color)">\n                                <label for="sf-input-train-${t.id}" class="block text-sm font-small mb-1">Safety Factor (SF)</label>\n                                <input type="number" \n                                    id="sf-input-train-${t.id}" \n                                    class="w-full px-2 py-2 border rounded-md text-sm"\n                                    value="${d.max}" \n                                    min="${d.min}" \n                                    max="${d.max}" \n                                    oninput="recalculateDetergentMacoForTrain(${t.id})"\n                                    onchange="clampSafetyFactor(this, ${t.id})">\n                                <p class="text-xs mt-1" style="color:var(--text-secondary);">Range for ${d.route} route: ${d.min.toLocaleString()} - ${d.max.toLocaleString()}</p>\n                            </div>\n                            \n                            <div class="p-3 rounded-md" style="background-color: var(--bg-accent);">\n                                <p class="font-mono text-xs" style="color:var(--text-secondary);">ADI = (5e-4 * LD50 * BW) / SF</p>\n                                <p><b  class="text-sm">Acceptable Daily Intake (ADI):</b> <span  class="text-sm" id="adi-value-train-${t.id}">...</span></p>\n                            </div>\n                            <div class="p-3 rounded-md" style="background-color: var(--bg-accent);">\n                                <p class="font-mono text-xs" style="color:var(--text-secondary);">MACO = (ADI * Min BS/MDD Ratio)</p>\n                                <p><b  class="text-sm">MACO:</b> <span  class="text-sm" id="maco-value-train-${t.id}">...</span></p>\n                            </div>\n                            <div class="p-3 rounded-md" style="background-color: var(--bg-accent);">\n                                <p class="font-mono text-xs" style="color:var(--text-secondary);">MACO/Area = MACO / Global Largest ESSA</p>\n                                <p><b  class="text-sm">MACO per Area:</b> <span class="text-sm"id="macoarea-value-train-${t.id}">...</span></p>\n                            </div>\n                            <div class="p-3 rounded-md" style="background-color: var(--bg-accent);">\n                                <p class="font-mono text-xs" style="color:var(--text-secondary);">MACO/Swab = (MACO/Area) * SSA</p>\n                                <p><b class="text-sm">MACO per Swab:</b> <span  class="text-sm" id="macoswab-value-train-${t.id}">...</span></p>\n                            </div>\n                        </div>\n                    </div>\n                `,a.appendChild(c),recalculateDetergentMacoForTrain(t.id)})}export function recalculateDetergentMacoForTrain(n,r){const i=t().find(e=>e.id===n);if(!i)return;if(void 0===r){const e=t();r=o(i,e)}const a=e.detergentIngredients.map(e=>parseFloat(e.ld50)).filter(e=>!isNaN(e)),d=a.length>0?Math.min(...a):0,c=5e-4*d*(parseFloat(document.getElementById("bodyWeight").value)||0)/(parseFloat(document.getElementById(`sf-input-train-${n}`).value)||1),l=c*i.minBsMddRatio,s=r>0?l/r:0,g=s*i.assumedSsa;document.getElementById(`min-ld50-train-${n}`).textContent=d.toLocaleString(),document.getElementById(`adi-value-train-${n}`).textContent=`${c.toFixed(4)} mg`,document.getElementById(`maco-value-train-${n}`).textContent=`${l.toFixed(2)} mg`,document.getElementById(`macoarea-value-train-${n}`).textContent=`${s.toExponential(3)} mg/cm²`,document.getElementById(`macoswab-value-train-${n}`).textContent=`${g.toFixed(4)} mg/swab`}export function renderDetergentIngredientsList(){const t=document.getElementById("detergentIngredientsContainer");t.innerHTML="",0===e.detergentIngredients.length&&(t.innerHTML='<p class="text-sm text-center p-2" style="color:var(--text-secondary);">Please add at least one detergent ingredient.</p>'),e.detergentIngredients.forEach(e=>{const n=document.createElement("div");n.className="flex items-center gap-x-2 mb-2",n.innerHTML=`\n                    <input type="text" oninput="updateDetergentIngredient(${e.id}, 'name', this.value)" value="${e.name}" placeholder="Ingredient Name" class="flex-1 px-3 py-2 border rounded-lg text-sm">\n                    <input type="number" oninput="updateDetergentIngredient(${e.id}, 'ld50', this.value)" value="${e.ld50}" placeholder="LD50 (mg/kg)" class="w-32 px-3 py-2 border rounded-lg text-sm" min="0">\n                    <div class="w-8 px-3 py-2 flex items-center justify-center">\n                        <button onclick="removeDetergentIngredient(${e.id})" class="text-red-500 hover:bg-red-50 rounded p-1" title="Remove Ingredient">\n                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16"><path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z"/></svg>\n                        </button>\n                    </div>\n                `,t.appendChild(n)})}export function addDetergentIngredient(){const t=[...e.detergentIngredients,{id:e.nextDetergentIngredientId,name:"",ld50:""}];e.setNextDetergentIngredientId(e.nextDetergentIngredientId+1),e.setDetergentIngredients(t),renderDetergentIngredientsList(),renderDetergentMaco()}export function removeDetergentIngredient(t){const n=e.detergentIngredients.filter(e=>e.id!==t);e.setDetergentIngredients(n),renderDetergentIngredientsList(),renderDetergentMaco()}export function updateDetergentIngredient(t,n,r){const o=e.detergentIngredients.find(e=>e.id===t);o&&(o[n]=r,renderDetergentMaco())}export function populateDetergentTrainOptions(){import("./utils.js").then(e=>{const{getTrainData:t}=e,n=t(),r=document.getElementById("detergentExportTrainOptions");r&&(r.innerHTML="",n.forEach(e=>{const t=document.createElement("label");t.className="flex items-center px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer",t.style.color="var(--text-primary)";const n=document.createElement("input");n.type="checkbox",n.className="mr-2 export-detergent-train-checkbox",n.value=e.id,n.onchange=()=>updateAllDetergentTrainsCheckbox("export");const o=document.createElement("span"),i=idMap.get(String(e.id));o.textContent=i?`${i.line} — Train ${i.number}`:`Train ${e.id}`,t.appendChild(n),t.appendChild(o),r.appendChild(t)}));const o=document.getElementById("detergentPrintTrainOptions");o&&(o.innerHTML="",n.forEach(e=>{const t=document.createElement("label");t.className="flex items-center px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer",t.style.color="var(--text-primary)";const n=document.createElement("input");n.type="checkbox",n.className="mr-2 print-detergent-train-checkbox",n.value=e.id,n.onchange=()=>updateAllDetergentTrainsCheckbox("print");const r=document.createElement("span");r.textContent=`Train ${e.id}`,t.appendChild(n),t.appendChild(r),o.appendChild(t)}))}).catch(e=>console.error("Error populating detergent train options:",e))}export function toggleAllDetergentTrainsSelection(e){const t=document.getElementById(`${e}DetergentAllTrainsCheckbox`);document.querySelectorAll(`.${e}-detergent-train-checkbox`).forEach(e=>{e.checked=t.checked})}export function updateAllDetergentTrainsCheckbox(e){const t=document.getElementById(`${e}DetergentAllTrainsCheckbox`),n=document.querySelectorAll(`.${e}-detergent-train-checkbox`),r=document.querySelectorAll(`.${e}-detergent-train-checkbox:checked`);t&&(0===r.length?(t.checked=!1,t.indeterminate=!1):r.length===n.length?(t.checked=!0,t.indeterminate=!1):(t.checked=!1,t.indeterminate=!0))}export function executeDetergentExportSelection(){import("./ui.js").then(e=>{const t=document.getElementById("exportDetergentAllTrainsCheckbox"),n=[];if(t&&t.checked)e.exportDetergentMacoToExcel();else{if(document.querySelectorAll(".export-detergent-train-checkbox:checked").forEach(e=>n.push(e.value)),0===n.length)return void e.showCustomAlert("No Selection","Please select at least one train to export.");window.exportSelectedDetergentTrains=n,e.exportDetergentMacoToExcel(n)}const r=document.getElementById("detergentExportDropdown");r&&r.classList.add("hidden")}).catch(e=>console.error("Error executing detergent export selection:",e))}export function executeDetergentPrintSelection(){import("./ui.js").then(e=>{const t=document.getElementById("printDetergentAllTrainsCheckbox"),n=[];if(t&&t.checked)e.printCurrentView("detergentMaco","all");else{if(document.querySelectorAll(".print-detergent-train-checkbox:checked").forEach(e=>n.push(e.value)),0===n.length)return void e.showCustomAlert("No Selection","Please select at least one train to print.");window.printSelectedTrain=n,e.printCurrentView("detergentMaco",n)}const r=document.getElementById("detergentPrintDropdown");r&&r.classList.add("hidden")}).catch(e=>console.error("Error executing detergent print selection:",e))}export function toggleDetergentExportDropdown(){const e=document.getElementById("detergentExportDropdown");e&&(e.classList.toggle("hidden"),e.classList.contains("hidden")||(populateDetergentTrainOptions(),setTimeout(()=>{document.addEventListener("click",function t(n){n.target.closest("#detergentExportDropdown")||n.target.closest('[onclick="toggleDetergentExportDropdown()"]')||(e.classList.add("hidden"),document.removeEventListener("click",t))})},10)))}export function toggleDetergentPrintDropdown(){const e=document.getElementById("detergentPrintDropdown");e&&(e.classList.toggle("hidden"),e.classList.contains("hidden")||(populateDetergentTrainOptions(),setTimeout(()=>{document.addEventListener("click",function t(n){n.target.closest("#detergentPrintDropdown")||n.target.closest('[onclick="toggleDetergentPrintDropdown()"]')||(e.classList.add("hidden"),document.removeEventListener("click",t))})},10)))}window.toggleDetergentExportDropdown=toggleDetergentExportDropdown,window.toggleDetergentPrintDropdown=toggleDetergentPrintDropdown,window.toggleAllDetergentTrainsSelection=toggleAllDetergentTrainsSelection,window.updateAllDetergentTrainsCheckbox=updateAllDetergentTrainsCheckbox,window.executeDetergentExportSelection=executeDetergentExportSelection,window.executeDetergentPrintSelection=executeDetergentPrintSelection;